[{"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/index.js":"1","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/App.js":"2","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/reportWebVitals.js":"3","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/context/auth-context.js":"4","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/MainNavigation.js":"5","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/MainHeader.js":"6","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/SideDrawer.js":"7","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/NavLinks.js":"8","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/Auth.js":"9","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/hooks/http-hook.js":"10","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/FormElements/Button.js":"11","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/FormElements/Input.js":"12","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/Signup.js":"13","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/Card.js":"14","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/ErrorModal.js":"15","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/LoadingSpinner.js":"16","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/Modal.js":"17","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/pages/Messages.js":"18","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/pages/MessageBoard.js":"19","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MbList.js":"20","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MbItem.js":"21","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MessageList.js":"22","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MessageItem.js":"23","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/hooks/auth-hook.js":"24","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/SassHome.js":"25"},{"size":500,"mtime":1610586135793,"results":"26","hashOfConfig":"27"},{"size":1338,"mtime":1614449881530,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610586135795,"results":"29","hashOfConfig":"27"},{"size":186,"mtime":1614206129120,"results":"30","hashOfConfig":"27"},{"size":1102,"mtime":1610586135798,"results":"31","hashOfConfig":"27"},{"size":196,"mtime":1610586135798,"results":"32","hashOfConfig":"27"},{"size":608,"mtime":1610586135799,"results":"33","hashOfConfig":"27"},{"size":909,"mtime":1611600263885,"results":"34","hashOfConfig":"27"},{"size":2438,"mtime":1614449881553,"results":"35","hashOfConfig":"27"},{"size":1582,"mtime":1610586135799,"results":"36","hashOfConfig":"27"},{"size":871,"mtime":1610586135796,"results":"37","hashOfConfig":"27"},{"size":661,"mtime":1611539553595,"results":"38","hashOfConfig":"27"},{"size":2757,"mtime":1614449881553,"results":"39","hashOfConfig":"27"},{"size":233,"mtime":1610586135797,"results":"40","hashOfConfig":"27"},{"size":432,"mtime":1610586135797,"results":"41","hashOfConfig":"27"},{"size":286,"mtime":1610586135797,"results":"42","hashOfConfig":"27"},{"size":1264,"mtime":1610586135797,"results":"43","hashOfConfig":"27"},{"size":4161,"mtime":1614449881530,"results":"44","hashOfConfig":"27"},{"size":6123,"mtime":1614627097680,"results":"45","hashOfConfig":"27"},{"size":415,"mtime":1614383279040,"results":"46","hashOfConfig":"27"},{"size":2249,"mtime":1614449881486,"results":"47","hashOfConfig":"27"},{"size":438,"mtime":1614448247646,"results":"48","hashOfConfig":"27"},{"size":1200,"mtime":1614449881487,"results":"49","hashOfConfig":"27"},{"size":1710,"mtime":1611599244305,"results":"50","hashOfConfig":"27"},{"size":208,"mtime":1614120608565,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n8mdv9",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/index.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/App.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/reportWebVitals.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/context/auth-context.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/MainNavigation.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/MainHeader.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/SideDrawer.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/navigation/NavLinks.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/Auth.js",["108"],"import React, { useContext } from \"react\"\nimport { useForm } from 'react-hook-form'\n\nimport { Link } from \"react-router-dom\"\nimport Button from \"../../shared/components/FormElements/Button\"\n\nimport Input from \"../../shared/components/FormElements/Input\"\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\"\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\"\n\nimport { AuthContext } from \"../../shared/context/auth-context\"\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\n\nimport \"../../css/style.css\"\n\nconst Auth = () => {\n    const auth = useContext(AuthContext)\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const { register, handleSubmit } = useForm()\n\n\n\n\n\n    const onSubmit = async (data) => {\n\n\n        try {\n            const responseData = await sendRequest(\n                process.env.REACT_APP_BACKEND_URL + \"/user/login\",\n                \"POST\",\n                JSON.stringify({\n                    email: data.login,\n                    password: data.password\n                }),\n                {\n                    \"Content-Type\": \"application/json\"\n                }\n            )\n            auth.login(responseData.userId, responseData.token)\n        } catch (err) {\n\n        }\n\n\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <div className=\"auth__card\">\n                <div className=\"auth__card-text\">\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <h2>please login</h2>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Input\n                            name=\"login\"\n                            valRef={register}\n                            label=\"email\"\n                            element=\"input\"\n                        />\n                        <Input\n                            name=\"password\"\n                            valRef={register}\n                            label=\"password\"\n                            element=\"input\"\n                            type=\"password\"\n                        />\n                    did you mean to <Link to=\"/signup\"> signup </Link> <br />\n                        <Button type=\"submit\">login</Button>\n                    </form>\n\n                </div>\n\n\n            </div>\n        </React.Fragment>\n    )\n\n}\n\nexport default Auth",["109","110"],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/hooks/http-hook.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/FormElements/Button.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/FormElements/Input.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/Signup.js",["111"],"import React, { useContext } from \"react\"\n\nimport { useForm } from \"react-hook-form\"\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\"\n\n\nimport { AuthContext } from \"../../shared/context/auth-context\"\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\"\nimport Input from \"../../shared/components/FormElements/Input\"\nimport Button from \"../../shared/components/FormElements/Button\"\nimport \"../../css/style.css\"\nimport { Link } from \"react-router-dom\"\n\n\n\nconst Signup = () => {\n\n    const auth = useContext(AuthContext)\n\n    const { register, handleSubmit } = useForm()\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const onSubmit = async (data) => {\n\n        try {\n            const responseData = await sendRequest(\n                process.env.REACT_APP_BACKEND_URL + \"/user/signup\",\n                \"POST\",\n                JSON.stringify({\n                    name: data.name,\n                    email: data.email,\n                    password: data.password\n                }),\n                {\n                    \"Content-Type\": \"application/json\"\n                }\n            )\n            auth.login(responseData.userId, responseData.token)\n        } catch (err) {\n\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <div className=\"auth__card\">\n                <div className=\"auth__card-text\">\n                    <h2>please signup</h2>\n                    {isLoading && <LoadingSpinner asOverylay />}\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Input\n                            name=\"name\"\n                            valRef={register}\n                            label=\"name\"\n                            element=\"input\"\n                        />\n                        <Input\n                            name=\"email\"\n                            valRef={register}\n                            label=\"email\"\n                            element=\"input\"\n                        />\n\n                        <Input\n                            name=\"password\"\n                            valRef={register}\n                            label=\"password\"\n                            element=\"input\"\n                            type=\"password\"\n                        />\n                        did you mean to <Link to=\"/login\"> login </Link> <br />\n                        <Button type=\"submit\">\n                            submit\n                    </Button>\n                    </form>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n\n}\n\nexport default Signup ","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/Card.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/ErrorModal.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/LoadingSpinner.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/components/UIElements/Modal.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/pages/Messages.js",["112"],"import React, { useEffect, useState, useContext } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\"\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\"\n\nimport { useForm } from \"react-hook-form\"\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\nimport MessageList from \"../components/MessageList\"\nimport Input from \"../../shared/components/FormElements/Input\"\nimport { AuthContext } from \"../../shared/context/auth-context\"\nimport Button from \"../../shared/components/FormElements/Button\"\n\nimport \"../../css/style.css\"\n\nconst Messages = () => {\n\n\n    const auth = useContext(AuthContext)\n\n    const [loadedMessageBoard, setLoadedMessageBoard] = useState()\n\n    const { register, handleSubmit } = useForm()\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const mbId = useParams().mbId\n\n    const [clear, setClear] = useState()\n\n\n    const onSubmit = async (data) => {\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/messages/createMessage`,\n                \"POST\",\n                JSON.stringify({\n                    sender: auth.userId,\n                    messageboard: mbId,\n                    message: data.messages,\n                    chat: [auth.userId]\n                }),\n                {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Bearer ' + auth.token\n                }\n            )\n            setClear(\"\")\n        } catch (err) {\n            console.log(err)\n        }\n\n        const fetchMessageBoard = async () => {\n\n\n\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/messages/findmb/${mbId}`\n                )\n                setLoadedMessageBoard(responseData.messageboard.messages)\n                console.log(responseData.messageboard)\n\n\n            } catch (err) {\n\n            }\n\n\n\n        }\n        fetchMessageBoard()\n\n    }\n\n\n\n    useEffect(() => {\n        const fetchMessageBoard = async () => {\n\n\n\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/messages/findmb/${mbId}`\n                )\n                setLoadedMessageBoard(responseData.messageboard.messages)\n                console.log(responseData.messageboard)\n\n\n            } catch (err) {\n\n            }\n\n\n\n        }\n        fetchMessageBoard()\n    }, [sendRequest, mbId])\n\n    // useEffect(()=> {\n    //     const fetchMessages = async ()=> {\n    //         try {\n    //             const responseData = await sendRequest(\n    //                 `http://localhost:5000/api/messages/getmessages/${messages}`\n    //             )\n    //         } catch (err) {\n\n    //         }\n    //     }\n    // })\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Link to=\"/\">\n                <div className=\"back\">\n                    <div className=\"back-text\">\n                        back\n                </div>\n                </div>\n            </Link>\n            <div>\n                <div className=\"messenger__card\">\n                    <div className=\"messenger__card-text\">\n                        {isLoading && (\n                            <div>\n                                <LoadingSpinner />\n                            </div>\n                        )}\n                        <h2>send a message</h2>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <Input\n                                valRef={register}\n                                name=\"messages\"\n                                val={clear}\n                            />\n                            <Button>message</Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            {!isLoading && loadedMessageBoard && <MessageList stuff={loadedMessageBoard} />}\n        </React.Fragment>\n    )\n}\n\nexport default Messages","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/pages/MessageBoard.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MbList.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MbItem.js",["113","114","115","116"],"import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\n\nimport \"./MbItem.css\"\nimport \"../../css/style.css\"\n\nconst MbItem = (props) => {\n\n    const [chat1, setChat1] = useState()\n    const [chat2, setChat2] = useState()\n    const [chat3, setChat3] = useState()\n\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    useEffect(() => {\n        const fetchEmail = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/user/findemail/${props.chat[0]}`\n                )\n                setChat1(responseData.user.email)\n            } catch (err) {\n\n            }\n        }\n        fetchEmail()\n\n    }, [sendRequest, props.chat])\n\n    useEffect(() => {\n        const fetchEmail = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/user/findemail/${props.chat[1]}`\n                )\n                setChat2(responseData.user.email)\n            } catch (err) {\n\n            }\n        }\n        fetchEmail()\n\n    }, [sendRequest, props.chat])\n\n\n\n    useEffect(() => {\n        const fetchEmail = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/user/findemail/${props.chat[2]}`\n                )\n                setChat3(responseData.user.email)\n            } catch (err) {\n\n            }\n        }\n        fetchEmail()\n\n    }, [sendRequest, props.chat])\n\n\n\n\n\n\n    return (\n\n\n        <Link to={`/${props._id}/messageboard`}>\n            <div className=\"mb__listitem\">\n                <div className=\"mb__listitemdiv\">\n                    <div>\n                        {chat1}<br className=\"mb__listitem-email\" />\n                    </div>\n                    <div className=\"mb__listitem-email\">\n                        {chat2}<br />\n                    </div>\n                    <div className=\"mb__listitem-email\">\n                        {chat3}</div>\n\n\n                </div>\n            </div>\n        </Link>\n\n\n    )\n}\n\nexport default MbItem","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MessageList.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/messages/components/MessageItem.js",["117","118","119","120"],"import React, { useEffect, useState } from \"react\"\n\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\nimport \"../../css/style.css\"\n\n\nconst MessageItem = (props) => {\n\n    const [message, setMessage] = useState()\n    const [name, setName] = useState()\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n\n\n\n    useEffect(() => {\n\n        const fetchMessages = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/messages/getmessages/${props.messages}`\n                )\n                setMessage(responseData.message.message)\n                const nameRD = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/messages/findmessenger/${props.messages}`\n\n                )\n                setName(nameRD.message[0].name)\n            } catch (err) {\n\n            }\n\n        }\n        fetchMessages()\n    }, [sendRequest, props.messages])\n\n\n    return (\n\n        <div className=\"message__card\">\n            <div className=\"message__card-text\">\n\n                {name} : {message}\n            </div>\n        </div>\n\n    )\n}\n\nexport default MessageItem","/Users/GavinSPotter/zgithub/messenger/messenger-client/src/shared/hooks/auth-hook.js",[],"/Users/GavinSPotter/zgithub/messenger/messenger-client/src/user/pages/SassHome.js",[],{"ruleId":"121","severity":1,"message":"122","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":12},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":12},{"ruleId":"121","severity":1,"message":"129","line":17,"column":13,"nodeType":"123","messageId":"124","endLine":17,"endColumn":22},{"ruleId":"121","severity":1,"message":"130","line":17,"column":24,"nodeType":"123","messageId":"124","endLine":17,"endColumn":29},{"ruleId":"121","severity":1,"message":"131","line":17,"column":44,"nodeType":"123","messageId":"124","endLine":17,"endColumn":54},{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":12},{"ruleId":"121","severity":1,"message":"129","line":13,"column":13,"nodeType":"123","messageId":"124","endLine":13,"endColumn":22},{"ruleId":"121","severity":1,"message":"130","line":13,"column":24,"nodeType":"123","messageId":"124","endLine":13,"endColumn":29},{"ruleId":"121","severity":1,"message":"131","line":13,"column":44,"nodeType":"123","messageId":"124","endLine":13,"endColumn":54},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]